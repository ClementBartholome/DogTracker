@page "/dog/{dogId:int}/documents"
@using DogTracker.Enums
@using Microsoft.AspNetCore.Components.Web
@rendermode InteractiveServer

<div class="d-flex justify-space-between align-center mb-6 pl-3 pt-3">
    <MudText Typo="Typo.h5">
        <MudIcon Icon="@Icons.Material.Filled.InsertDriveFile" Size="Size.Large" Class="icon-circle"/>
        Documents
    </MudText>
    <MudButton
        Color="Color.Primary" Variant="Variant.Filled"
        Class="ml-auto"
        OnClick="@(() => OpenDrawer(Anchor.Bottom))">
        <MudIcon Icon="@Icons.Material.Filled.Add"/>
    </MudButton>
</div>

<MudDrawer @bind-Open="@_open" Anchor="@_anchor" Elevation="3" Variant="@DrawerVariant.Temporary"
           OverlayAutoClose="@_overlayAutoClose" Class="rounded-top">
    <MudDrawerHeader>
        <MudText Typo="Typo.h6">Ajouter un document</MudText>
    </MudDrawerHeader>
    <MudDrawerContainer Class="m-auto w-75">
        <MudButton StartIcon="@Icons.Material.Filled.CameraAlt" Variant="Variant.Filled" Color="Color.Primary"
                   OnClick="StartScanning" Class="w-100 mb-4">Scanner un document
        </MudButton>
        <MudFileUpload T="IBrowserFile" FilesChanged="UploadFiles" Class="w-100 mb-4">
            <ActivatorContent>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           StartIcon="@Icons.Material.Filled.CloudUpload"
                           Class="w-100">
                    Télécharger un fichier
                </MudButton>
            </ActivatorContent>
        </MudFileUpload>
    </MudDrawerContainer>
</MudDrawer>

<MudContainer Class="scanner-container">
    @if (!isCaptureMode)
    {
        @if (scannedFiles.Any())
        {
            <MudChipSet T="TypeFilesEnum" @bind-SelectedValue="_filterCategory" Class="mb-2">
                <MudChip Text="Tous" Color="Color.Default" Default="true" Value="@((TypeFilesEnum)(-1))">Tous</MudChip>
                @foreach (var category in TypeFilesEnumExtensions.GetCategories())
                {
                    var chipColor = GetChipColor(category.Key);
                    <MudChip Text="@category.Value"
                             Color="@chipColor"
                             Value="@category.Key">@category.Value</MudChip>
                }
            </MudChipSet>

            <MudGrid>
                @{
                    var filesToShow = _filterCategory != (TypeFilesEnum)(-1)
                        ? scannedFiles.Where(f => f.Category == _filterCategory).ToList()
                        : scannedFiles;
                }

                @if (!filesToShow.Any())
                {
                    <MudItem xs="12">
                        <MudAlert Severity="Severity.Info">Aucun document dans cette catégorie.</MudAlert>
                    </MudItem>
                }
                else
                {
                    @foreach (var file in filesToShow)
                    {
                        <MudItem xs="12" sm="6" md="4">
                            <MudCard Elevation="2">
                                <MudCardMedia Image="@file.PreviewUrl" Height="200"/>
                                <MudCardContent>
                                    <MudChip T="TypeFilesEnum" Size="Size.Small"
                                             Color="@GetChipColor(file.Category)"
                                             Class="mb-2">@TypeFilesEnumExtensions.GetCategories()[file.Category]</MudChip>
                                    <MudText Typo="Typo.body2" Class="mt-2">
                                        Ajouté le @file.CreatedAt.ToString("dd/MM/yyyy à HH:mm")
                                    </MudText>
                                </MudCardContent>
                                <MudCardActions class="flex-wrap">
                                    <MudButton Variant="Variant.Text"
                                               Color="Color.Secondary"
                                               OnClick="() => OpenPreviewDialog(file)"
                                               StartIcon="@Icons.Material.Filled.Visibility">
                                        Voir
                                    </MudButton>
                                    <MudButton Variant="Variant.Text"
                                               Color="Color.Error"
                                               OnClick="() => DeleteFile(file)"
                                               StartIcon="@Icons.Material.Filled.Delete">
                                        Supprimer
                                    </MudButton>
                                    <MudButton Variant="Variant.Text"
                                               Color="Color.Primary"
                                               Href="@file.DownloadUrl"
                                               Download
                                               StartIcon="@Icons.Material.Filled.Download">
                                        Télécharger
                                    </MudButton>
                                </MudCardActions>
                            </MudCard>
                        </MudItem>
                    }
                }
            </MudGrid>
        }
        else
        {
            <MudAlert Severity="Severity.Info">Aucun document n'a été ajouté pour le moment.</MudAlert>
        }
    }
    else
    {
        @if (previewImage == null)
        {
            <div class="camera-container">
                <video id="camera-preview" autoplay playsinline class="w-100 rounded"
                       style="height: 440px; object-fit: cover"></video>
                <div class="camera-overlay">
                    <div class="document-frame"></div>
                </div>
            </div>
            <MudStack Row="true" Class="mt-4" Justify="Justify.Center">
                <MudButton Variant="Variant.Outlined"
                           Color="Color.Error"
                           OnClick="StopScanning"
                           StartIcon="@Icons.Material.Filled.Close">
                    Annuler
                </MudButton>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Primary"
                           OnClick="CapturePhoto"
                           StartIcon="@Icons.Material.Filled.Camera">
                    Prendre la photo
                </MudButton>
            </MudStack>
                @if (hasFlash)
                {
                    <MudIconButton
                        Icon="@(flashEnabled ? Icons.Material.Filled.FlashOn : Icons.Material.Filled.FlashOff)"
                        Color="Color.Default"
                        OnClick="ToggleFlash"/>
                }
        }
        else
        {
            <MudImage Src="@previewImage" Alt="Preview" Class="w-100 rounded" style="height: 440px; object-fit: cover !important;"/>
            <MudStack Row="true" Class="mt-4" Justify="Justify.Center">
                <MudButton Variant="Variant.Outlined"
                           Color="Color.Secondary"
                           OnClick="RetakePhoto"
                           StartIcon="@Icons.Material.Filled.Replay">
                    Reprendre
                </MudButton>
                <MudButton Variant="Variant.Filled"
                           Color="Color.Success"
                           OnClick="OpenCategoryDialog"
                           StartIcon="@Icons.Material.Filled.Save">
                    Continuer
                </MudButton>
            </MudStack>
        }
    }
</MudContainer>

<style>
    .document-card {
        cursor: pointer;
        transition: transform 0.2s, box-shadow 0.2s;
    }

    .document-card:hover {
        transform: translateY(-5px);
        box-shadow: var(--mud-elevation-5);
    }

    .camera-container {
        position: relative;
        width: 100%;
        height: 440px;
    }

    .camera-overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .document-frame {
        border: 2px dashed white;
        width: 85%;
        height: 85%;
        box-shadow: 0 0 0 1000px rgba(0, 0, 0, 0.3);
        border-radius: 8px;
    }
</style>