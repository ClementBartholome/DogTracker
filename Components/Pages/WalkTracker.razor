@page "/dog/{DogId:int}/walk"
@inject ILocationService LocationService
@inject IDogService DogService
@inject IJSRuntime JSRuntime
@using DogTracker.Interfaces
@using DogTracker.Models
@rendermode InteractiveServer

<div class="mx-auto">
    <div class="bg-white rounded-lg shadow p-4 mb-4">
        <h1 class="text-2xl font-bold mb-4">Suivi de promenade</h1>

        @if (!isTracking)
        {
            <MudButton OnClick="StartWalk" Color="Color.Primary" Variant="Variant.Filled"
                       class="w-full text-white font-bold py-3 rounded-lg mb-4">
                Démarrer la promenade
            </MudButton>
        }
        else
        {
            <div class="space-y-4">
                <div class="text-center">
                    <p class="text-xl">Durée: @GetFormattedDuration()</p>
                    <p class="text-lg">Distance: @(currentDistance.ToString("F2")) km</p>
                </div>

                <MudButton OnClick="StopWalk" Color="Color.Primary" Variant="Variant.Filled"
                           class="w-full bg-red-500 hover:bg-red-600 text-white font-bold py-3 px-4 rounded-lg">
                    Terminer la promenade
                </MudButton>
            </div>
        }
    </div>

    <div id="map" style="height: 300px;" class="mb-4 rounded-lg w-100"></div>

    @if (isLoading)
    {
        <MudSkeleton SkeletonType="SkeletonType.Rectangle" Width="100%" Height="110px"/>
    }
    else
    {
        @if (walkHistory?.Any() == true)
        {
            <MudPaper Class="p-4 mb-4">
                <MudText Typo="Typo.h6" Class="mb-4">Historique des Promenades</MudText>
                <MudList T="object">
                    @foreach (var walk in walkHistory.OrderByDescending(w => w.StartTime).Select(w => new WalkViewModel(w)))
                    {
                        <MudListItem>
                            <MudText
                                Typo="Typo.subtitle1">@walk.AdjustedStartTime.ToString("dd/MM/yyyy HH\\hmm")</MudText>
                            <MudText Typo="Typo.body2" Class="text-gray-600">
                                <span>@walk.Distance.ToString("F2") km</span>
                                <span>@((walk.AdjustedEndTime - walk.AdjustedStartTime).TotalMinutes.ToString("F0")) min</span>
                            </MudText>
                        </MudListItem>
                    }
                </MudList>
            </MudPaper>
        }
        else
        {
            <MudPaper Class="p-4">
                <MudText Typo="Typo.body1" Class="text-gray-600">Aucune promenade enregistrée.</MudText>
            </MudPaper>
        }
    }
</div>